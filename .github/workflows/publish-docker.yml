name: Create and publish a Docker image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches: ['main']

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-amd64:
    runs-on: ubuntu-24.04
    container:
      image: rust:1.88
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build
        run: |
          cd myapp
          cargo build --release
          mkdir -p artifacts
          mv target/release/myapp artifacts

      - uses: actions/upload-artifact@v4
        with:
          name: "built-amd64"
          path: "artifacts"

  build-arm64:
    runs-on: ubuntu-24.04-arm
    container:
      image: rust:1.88
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build
        run: |
          cd myapp
          cargo build --release
          mkdir -p artifacts
          mv target/release/myapp artifacts
      
      - uses: actions/upload-artifact@v4
        with:
          name: "built-arm64"
          path: "artifacts"

  make-image:
    runs-on: ubuntu-latest
    needs: [build-arm64, build-amd64]
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Set up Docker Buildx
        run: |
          docker buildx create --use
      
      - name: List files
        run: |
          ls -lah
          ls -lah built-arm64 || echo "nope"
          ls -lah built-amd64 || echo "nope"

      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and Push image
        run: |
          docker buildx build \
            --file ./Dockerfile \
            --platform linux/arm64,linux/amd64 \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
            --push .